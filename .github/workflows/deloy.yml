name: Deploy to AWS ECS with ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.RESIGON }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AK }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SK }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.RESIGON }}.amazonaws.com

  ECR_REPO_FRONTEND: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_SERVICE_FRONTEND: ${{ secrets.ECS_SERVICE_NAME }}
  ECS_TASK_DEFINITION_FRONTEND: ${{ secrets.ECS_TASK_DEFINATION }}

jobs:
  deploy:
    name: Build & Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üê≥ Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: üèóÔ∏è Build and Push Frontend Docker Image
        working-directory: ./flight-client
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_FRONTEND:latest .
          docker push $ECR_REGISTRY/$ECR_REPO_FRONTEND:latest


      - name: üöÄ Deploy Frontend to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE_FRONTEND }}
          task-definition: ${{ env.ECS_TASK_DEFINITION_FRONTEND }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_FRONTEND }}:latest
          container-name: test-ricky

